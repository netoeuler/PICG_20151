27/11:
1- Crie uma função chamada newImage que recebe os parâmetros size e color. Retorna uma imagem com tamanho = size e cor = color. Se color for escalar, retornar uma imagem escala de cinza ; Se color for vetor de 3 posições retorna imagem RGB; Erro caso contrário.
	a) Criar e exibir uma imagem branca, uma preta e uma colorida
2- Crie uma função chamada drawLine, que recebe uma imagem, um ponto p0, um ponto p1 e uma cor color. A função deve desenhar um segmento de reta de p0 a p1, com cor = color.
3- Crie uma função chamada drawCircle, que recebe uma imagem, um ponto c, um raio r e uma cor color. A função deve desenhar um círculo com centro = c, raio = r e cor = color.
 
04/12:
1- Crie uma função chamada drawPoly que receba uma imagem im, um vetor de pontos e uma cor. Use a função drawLine para desenhar um poligono com vertice em cada um dos pontos fornecidos e com a cor dada.
2- Crie uma função chamada rotate que recebe um angulo theta em GRAUS e um vetor de pontos. Retorne outro vetor com os pontos rotacionados em sentido anti-horário pelo angulo fornecido.
3- Crie uma função chamada translate que recebe um vetor bidimensional delta com valor de deslocamento e um vetor de pontos. Retorne outro vetor com os pontos transladados por delta.
4- Crie uma função rotate2 que recebe um vetor de pontos, um angulo em graus theta e um valor de deslocamento delta:
	- translade os pontos em -delta
	- rotacione em theta graus no sentido anti-horario
	- translade os pontos em +delta
	- retorne o resultado

11/12:
1- Crie uma função chamada ImgRotate que recebe uma imagem img e um ângulo alpha. Retorne uma nova imagem contendo img rotacionada em torno de seu centro em sentido horário, 
alpha graus.
